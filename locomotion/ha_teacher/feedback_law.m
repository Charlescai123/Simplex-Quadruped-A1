function [F] = feedback_law(roll, pitch, yaw)

T = 1/10;  %sampling period

Rx = [1          0           0;
      0  cos(roll)  -sin(roll);
      0  sin(roll)   cos(roll)];

Ry = [cos(pitch)  0  sin(pitch);
           0      1       0;
      -sin(pitch) 0  cos(pitch)];

Rz = [cos(yaw)   -sin(yaw)   0;
      sin(yaw)    cos(yaw)   0;
             0           0   1];

Rzyx = Rz * Ry * Rx;

%%%%%%%%%%%%%%%%%%%%%%%%%%  Contiunous matrices  %%%%%%%%%%%%%%%%%%%%%%%%%
aA = [zeros(3,3),  zeros(3,3),    1*eye(3),    zeros(3,3);
      zeros(3,3),  zeros(3,3),    zeros(3),          Rzyx;
      zeros(3,3),  zeros(3,3),    zeros(3),    zeros(3,3);
      zeros(3,3),  zeros(3,3),    zeros(3),    zeros(3,3)];
aB = [zeros(6,6);
         eye(6)];

%%%%%%%%%%%%%%%%%%%%%%%%%%   Discrete-time   %%%%%%%%%%%%%%%%%%%%%%%%%
B = [zeros(6,6);
         eye(6)]*T;
A = eye(12) + T*aA;


%%%%%%%%%%%%%%%%%%%%%%%%%%  Safety constriant  %%%%%%%%%%%%%%%%%%%%%%%%%%%
b1 = 1/0.17;     %yaw
b2 = 1/0.13;     %height
b3 = 1/0.35;     %velocity
n = 12;
D = [0,    0,     0,    0,    0,    b1,     0,    0,    0,    0,    0,    0;
     0,    0,    b2,    0,    0,     0,     0,    0,    0,    0,    0,    0;
     0,    0,     0,    0,    0,     0,    b3,    0,    0,    0,    0,    0];

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



% bP = [563.295487504608,-0,-0,-0,-0,0,80.6068340820532,-0,-0,-0,-0,-0
%     -0,65.0989784725249,-0,-0,-0,-0,-0,12.5272113140619,0,-0,-0,-0
%     -0,-0,306.240269584922,-0,-0,-0,-0,-0,33.3640232184916,0,-0,-0
%     -0,-0,-0,65.0989784725249,-0,-0,-0,-0,-0,12.5272113140619,0,-0
%     -0,-0,-0,-0,65.0989784725249,-0,-0,-0,-0,-0,12.5272113140619,0
%     0,-0,-0,-0,-0,2408.26508565392,0,-0,-0,-0,-0,194.985847772617
%     80.6068340820532,-0,-0,-0,-0,0,14.9042778723386,-0,-0,-0,-0,-0
%     -0,12.5272113140619,-0,-0,-0,-0,-0,2.72100646257479,-0,-0,-0,-0
%     -0,0,33.3640232184916,-0,-0,-0,-0,-0,4.836660389486,-0,-0,-0
%     -0,-0,0,12.5272113140619,-0,-0,-0,-0,-0,2.72100646257479,-0,-0
%     -0,-0,-0,0,12.5272113140619,-0,-0,-0,-0,-0,2.72100646257479,-0
%     -0,-0,-0,-0,0,194.985847772617,-0,-0,-0,-0,-0,19.7376113263866];

% bP = [537.384856219438	0	0	0	0	0	74.0889814758706	0	0	0	0	0
% 0	12.8820405181646	0	0	0	0	0	2.47827187687755	0	0	0	0
% 0	0	333.182185343034	0	0	0	0	0	27.7114273430880	0	0	0
% 0	0	0	12.8820405181646	0	0	0	0	0	2.47827187687755	0	0
% 0	0	0	0	12.8820405181646	0	0	0	0	0	2.47827187687755	0
% 0	0	0	0	0	2552.98674196937	0	0	0	0	0	190.240501947992
% 74.0889814758706	0	0	0	0	0	13.6356558416077	0	0	0	0	0
% 0	2.47827187687755	0	0	0	0	0	0.538873277973005	0	0	0	0
% 0	0	27.7114273430880	0	0	0	0	0	2.94009366727782	0	0	0
% 0	0	0	2.47827187687755	0	0	0	0	0	0.538873277973005	0	0
% 0	0	0	0	2.47827187687755	0	0	0	0	0	0.538873277973005	0
% 0	0	0	0	0	190.240501947992	0	0	0	0	0	17.6173860230535];

bP = [426.304736530764,-0,-0,-0,-0,0,63.5052496084083,-0,-0,-0,-0,-0
-0,3.96229032839901,-0,-0,-0,-0,-0,0.84049312866546,0,-0,-0,-0
-0,-0,289.006347272967,-0,-0,-0,-0,-0,23.065299034675,0,-0,-0
-0,-0,-0,3.96229032839901,-0,-0,-0,-0,-0,0.84049312866546,0,-0
-0,-0,-0,-0,3.96229032839901,-0,-0,-0,-0,-0,0.84049312866546,0
0,-0,-0,-0,-0,2142.78385811813,0,-0,-0,-0,-0,162.595615096839
63.5052496084083,-0,-0,-0,-0,0,12.7875771444049,-0,-0,-0,-0,-0
-0,0.84049312866546,-0,-0,-0,-0,-0,0.203573838735194,-0,-0,-0,-0
-0,0,23.065299034675,-0,-0,-0,-0,-0,2.42319989163126,-0,-0,-0
-0,-0,0,0.84049312866546,-0,-0,-0,-0,-0,0.203573838735194,-0,-0
-0,-0,-0,0,0.84049312866546,-0,-0,-0,-0,-0,0.203573838735194,-0
-0,-0,-0,-0,0,162.595615096839,-0,-0,-0,-0,-0,15.9285400347383]

bP = bP*1;


eta = 3.5;
% beta = 0.99;
beta = 1;
kappa = 0.0001;


setlmis([]) 
Q = lmivar(1,[12 1]); 
R = lmivar(2,[6 12]); 

lmiterm([-1 1 1 Q],1,(beta - 2*eta*kappa)*eye(12));
lmiterm([-1 2 1 Q],A,1);
lmiterm([-1 2 1 R],B,1);
lmiterm([-1 2 2 Q],1,0.5);

lmiterm([2 1 1 Q], eye(12), bP);
lmiterm([2 1 1 0], -eye(12));

lmiterm([3 1 1 Q], -eta*eye(12), bP);
lmiterm([3 1 1 0], eye(12));

mylmi = getlmis;


[tmin, psol] = feasp(mylmi);

assert(tmin < 0);

Q = dec2mat(mylmi, psol, Q);
R = dec2mat(mylmi, psol, R);

P = inv(Q);

aF = round(aB*R*P,0);

eig(aA + aF)
eig(bP);

F = aF;
F = -F;

end


